# This is a basic workflow that is manually triggered

name: openwrt22.03.X稳定和追新

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  schedule:
   # UTC比中国少8个小时
   # 每天中国6-8=-2=22点编译
   # 每3天执行一次，降低频率 Runs at 22:05 UTC on the 1, 4, 7, 10, 13, 16, 19, 22, 25, 28 and 31st of every month.
   - cron:  '5 22 */31 * *'
   #test
   #- cron:  '1/5 * * * *'
   
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      #name:
        # Friendly description to be shown in the UI instead of 'name'
        #description: 'Person to greet'
        # Default value if no value is explicitly provided
        #default: 'World'
        # Input has to be provided for the workflow to run
        #required: true
      release:
        # Friendly description to be shown in the UI instead of 'name'
        description: 是否需要发布到Release?(不发布也可以到Artifacts下载)
        # Default value if no value is explicitly provided
        default: 'yes'
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
  # The type of runner that the job will run on ubuntu-latest
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:    
    - name: 生成版本号
      run: |
        whoami
        id
        echo 接收到的输入参数:
        echo "${{ github.event.inputs.production }}"
        echo "${{ github.event.inputs.release }}"
        echo 触发事件:$GITHUB_EVENT_NAME
        echo 触发者:$GITHUB_ACTOR
        # exit 1
        echo 
        echo 当前目录:$(pwd)
        # 版本号,用日期
        VERSION=$(TZ='Asia/Shanghai' date +%Y%m%d%H%M)
        # $GITHUB_ENV变量必须要在下一个流程才生效
        echo "NAME=22.03.X-${VERSION}+openwrt稳定追新" >> $GITHUB_ENV
        echo "TAG=v22.03.X-${VERSION}+openwrt" >> $GITHUB_ENV
        # 两个发布条件
        if [ ${{ github.event.inputs.release == 'yes' }} ];then
          echo "TO_RELEASE=yes" >> $GITHUB_ENV
        fi
        # 计划执行,发布release
        if [ "$GITHUB_EVENT_NAME" == "schedule" }} ];then
          echo "TO_RELEASE=yes" >> $GITHUB_ENV
        fi
        
        ip addr
      
    - name: 准备编译环境
      if: true
      run: | 
        echo ${{ env.NAME }}
        sudo apt install build-essential libncurses5-dev libncursesw5-dev \
        zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python  > /dev/null
  
    - name: 下载编译脚本
      uses: actions/checkout@v2.3.4
      with:
        # Repository name with owner. For example, actions/checkout
        #repository: # optional, default is ${{ github.repository }}
        # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, uses the default branch.
        ref: main
        path: buildsh
     
        
    - name: 开始编译
      if: true
      run: |
        echo $GITHUB_WORKSPACE
        bash $GITHUB_WORKSPACE/buildsh/buildsh/openwrt-fast-auto-package21.02.sh
        
    - name : 上传编译的固件Artifacts
      uses: actions/upload-artifact@v2
      if: true
      with:
        name: ${{ env.NAME }}
        path: /opt/openwrt/image
        
    - name: 发布到Release
      if: ${{ env.TO_RELEASE == 'yes' }}
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.NAME }}
        tag_name: ${{ env.TAG }}
        body_path: /opt/openwrt/image/readme.txt
        draft: false
        prerelease: false
        files: /opt/openwrt/image/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

